@model PagedList.IPagedList<SAssignment.Models.ExerciseRecord>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@*<script src="~/js/MJS.js"></script>*@
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
@*<input id="MySearch" type="text" value="" style="width:500px" onkeyup="Search()" />*@

@Html.Action("Create", "Home")

<table class="table" id="myTable">
    <tr>
        <th>
            ExerciseName
        </th>
        <th> 
            ExerciseDate
        </th>
        <th>
            DurationInMinutes
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ExerciseName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExerciseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DurationInMinutes)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))